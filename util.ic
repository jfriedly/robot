/**
 * @file   util.ic
 * @brief  Utility functions
 * @author Andrew Krieger
 * @date   4/25/2011
 */

///Returned by @ref press_button if the start button is pressed
#define BUTTON_START 0
///Returned by @ref press_button if the stop button is pressed
#define BUTTON_STOP 1

/**
 * @brief Print half a byte (4 bits) in hex.
 * @param b The data to print.  Only the low 4 bits are used.
 */
void print_hex_half(int b) {
    //Select the proper character from the string below
    printf("%c", "0123456789ABCDEF"[b & 0x0F]);
}

/**
 * @brief Print a byte in hex.
 * @param b The byte to print.  Only the low 8 are used.
 */
void print_hex_byte(int b) {
    //Print the high nibble
    print_hex_half(b>>4);
    //Print the low nibble
    print_hex_half(b);
}


/**
 * @brief Block until the start button is pressed.  The stop button is ignored.
 */
void press_start(void) {
    //Wait for the user to push start down
    while(!start_button())
      ;
    
    //Wait for the user to let go.
    while(start_button())
      ;
}

/**
 * @brief Block until the stop button is pressed.  The start button is ignored.
 */
void press_stop(void) {
    //Wait for the user to push start down
    while(!stop_button())
      ;
    
    //Wait for the user to let go.
    while(stop_button())
      ;
}

/**
 * @brief Block until the start or the stop button is pressed.
 * @return @ref BUTTON_START or @ref BUTTON_STOP
 */
int press_button(void) {
    //Wait for a button to be pressed down
    for(;;) {
        if(stop_button()) {
            //They pressed stop; wait for them to let go
            while(stop_button())
              ;
            //Return STOP
            return BUTTON_STOP;
        }
        if(start_button()) {
            //They pressed start; wait for them to let go
            while(start_button())
              ;
            //Return start
            return BUTTON_START;
        }
    }
}

/**
 * @file   menu.ic
 * @brief  Easily define selection menus.
 * @author Andrew Krieger
 * @date   4/26/2011
 *
 * This code facilitates the creation of selection menus
 * that use the Handy Board knob to pick a selection.
 * The Handy Board display will show the current option,
 * which the user can change by changing the knob.
 * When the user presses the start button, the @ref do_menu
 * function returns the index of the choice.  The text
 * for the choices are passed in the argument to @ref do_menu,
 * separated by newlines.
 */

#use "util.ic"

/**
 * @brief Select a choice from the menu
 * @param text Newline-separated list of options.  See below for description.
 * @return The (0-based) index of the selection made
 * 
 * Let the user select one of the given options with the Handy board knob.
 * The text to display is all passed in one string, with different options
 * separated by newlines.  The first line in the string corresponds to return
 * value 0, the second line to return value 1, and so on.
 *
 * For example, the following call:
 *  @code do_menu("Do course\nCollect data\nDrive into walls") @endcode
 * will display a menu with these three options, and return the given index values:
 *  @li Index 0: "Do course"
 *  @li Index 1: "Collect data"
 *  @li Index 2: "Drive into walls"
 */
int do_menu(const char *text) {
  int n_opts;
  int sel_opt;
  int i;
  const char *p;

  //Start with one option.  Add more when we find a newline.
  n_opts = 1;
  for(p=text; *p; ++p) {
    if(*p == '\n')
      ++n_opts;
  }

  
}


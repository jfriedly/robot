/**
 * @file   strip.ic
 * @brief  Follow metal strip
 * @author Joel Friedly
 * @date   4/30/2011
 */

#use "opto.ic"
#use "gps_module.lis"
#use "util.ic"

#define STRIP_PORT_LEFT 6
#define STRIP_PORT_MIDDLE 5
#define STRIP_PORT_RIGHT 4
#define STRIP_THRESHOLD 100
#define THREE_SIXTY 32.0
#define CLOCKWISE 8675309
#define CTRCLOCKWISE 1337
#define BOTH 2



void align_with_strip(int angle)
{
    int theta, trans_to_turn, i, j, droid_heading;
    ao();
    while(!gps_get_data());
    while(!gps_get_data());
    while(!gps_get_data());
    
    droid_heading = gps_heading + 90;
    theta = abs(droid_heading - angle);
    
    // if the robot is more than 2 degrees off course, turn a little bit
    while(theta > 2)
      {
        trans_to_turn = round(THREE_SIXTY * ((float)theta/360.0));
        printf("Hdg:%d Th:%d T:%d\n",droid_heading, theta , trans_to_turn);
        sleep(2.0);
        /* NOTE:  with the requirement that theta must be greater than 2, the smallest value of theta in the above math is 
        3.0.  Using 3.0, the float math will evaluate to 0.533, which will typecast to the integer 1, so trans_to_turn 
        will always be 1 or more. */
        
        /* Typecasts truncate toward zero 0; use round() for rounding - AK */
        
        if(droid_heading < angle)
          {
            i=0;
            
            //If trans_to_turn == 0, the while loop never runs
            printf("1");
            while((analog(STRIP_PORT_LEFT) > STRIP_THRESHOLD) && (i < trans_to_turn))
              {
                // turn clockwise to angle
                printf("2");
                if(trans_to_turn == 0)
                  {
                    //go ctrclockwise for 1/100 of a second
                    motor(MOTOR_LEFT,-100);
                    motor(MOTOR_RIGHT,100);
                    sleep(0.1);
                }
                else
                  go_by_transitions(1, CTRCLOCKWISE);
                ++i;
            }
            printf("\n");
        }
        
        else if(droid_heading > angle)
          {
            j=0;
            printf("1");
            while((analog(STRIP_PORT_RIGHT) > STRIP_THRESHOLD) && (j < trans_to_turn))
              {
                // turn clockwise to angle
                printf("2");
                if(trans_to_turn == 0)
                  {
                    //go clockwise for 1/100 of a second
                    motor(MOTOR_LEFT,100);
                    motor(MOTOR_RIGHT,-100);
                    sleep(0.1);
                }
                else
                  go_by_transitions(1, CLOCKWISE);
                ++j;
            }
            printf("\n");
        }
        
        ao();
        while(!gps_get_data());
        while(!gps_get_data());
        while(!gps_get_data());
        droid_heading = gps_heading+90;
        theta = abs(droid_heading - angle); 
    } 
}

int main()
{
    gps_initialize_knob();
    gps_enable();
    
    align_with_strip(180);
}

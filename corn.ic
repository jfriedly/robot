#use "drive.ic"
#use "line.ic"
#use "defines.ic"
#use "drive-straight.ic"


/**
 * @brief Drive from the starting area (facing west) to the corn area
 * 
 * Assumes starting in the template position.
 */
void start_to_corn(void) {
    int shiny_ctr;
    
    turn(5.0);
    drive_straight(50);
    turn(-50.0);
    gps_turn(45, 4);

    SHAFT_LEFT_COUNT = SHAFT_RIGHT_COUNT = 0;
    
    reset_system_time();
    motor(MOTOR_LEFT,  100);
    motor(MOTOR_RIGHT, 100);
    while(!digital(SWITCH_WALL_LEFT) && SHAFT_LEFT_COUNT + SHAFT_RIGHT_COUNT < 220 && mseconds() < 7500L)
      ;
    
    ao();
    msleep(100L);
    turn_cw_to_shiny();
}


/**
 * @brief Drive from the rightmost corn strip (facing south) to the start area
 *
 * Using empirically determined values, drive back to the starting area.  Start
 * on the middle corn strip, facing (approximately) south.  This function follows
 * that strip, turns toward the starting area (parallel to the bumps), then drives
 * between two bumps back to the start.  It then lines up facing north, ready
 * to transition into drive_up_hill.
 */
void corn_to_start(void) {
    follow_strip_forward(1, 3000L);
    
    drive_straight(13);
    
    turn(45.0);
    gps_turn(40, 4);
    
    drive_straight(95);
    
    turn(60.0);
    
    drive_straight(20);
    turn(90.0);
    gps_turn(0, 4);
}


/**
 * @brief Checks to see if the corn light underneath the robot is red or blue.
 * @return Returns 1 if the light is blue, 0 if not.
 *
 * Currently has a press_start() in there for debugging.
 */
int test_corn(void) {
    int cds;

    follow_strip_forward(1, 3000L);
    
    press_start();
    
    drive_straight(-2);
    
    return analog(CDS_FRONT) >= 15;
}

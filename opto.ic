#use "util.ic"
#use "defines.ic"

#define OPTO_PORT 7
#define CLOCKWISE 8675309
#define CTRCLOCKWISE 1337
#define MOT_LEFT 1
#define MOT_RIGHT 3
#define BOTH 2
#define BACKWARDS 10

/**
 * @brief Run motors til we get target transitions.
 * @param target Number of transitions to achieve.
 * @param motors CLOCKWISE, CTRCLOCKWISE, or BOTH
 */ 
void go_by_transitions(int target, int motors) {
    int n, last;
    
    //    printf("Driving\n");
    
    SHAFT_LEFT_COUNT = SHAFT_RIGHT_COUNT = 0;
    
    // If-else tree to decide which motor to use. Did not use switch-case because Handy Board doesn't like that much.
    if(motors==BOTH)
      {
        motor(MOT_LEFT,100);
        motor(MOT_RIGHT,100);
    }
    else if(motors==CTRCLOCKWISE)
      {
        motor(MOT_LEFT,-100);
        motor(MOT_RIGHT,100);
    }
    else if(motors==CLOCKWISE)
      {
        motor(MOT_LEFT,100);
        motor(MOT_RIGHT,-100);
    } else if(motors == BACKWARDS) {
        motor(MOT_LEFT, -100);
        motor(MOT_RIGHT, -100);
    }
    
    
    while(SHAFT_LEFT_COUNT < target)
      ;
    
    // Turn everything off.
    ao();
    //    printf("Done\n");
}

void dist_test(void)
{
    int n = 0;
    int last;
    
    press_start();
    
    last = digital(OPTO_PORT);
    motor(CLOCKWISE, 100);
    motor(CTRCLOCKWISE, 100);
    while(!stop_button())
      {
        if(last != digital(OPTO_PORT))
          {
            ++n;
            last = !last;
        }
    }
    
    ao();
    
    printf("Transitions %d\n", n);
    
}

/*
int main()
{
    int target;
    
    for(;;) {
        while(!start_button()) {
            target = 76 + (knob() - 128) / 8;
            printf("Target: %d\n", target);
            sleep(0.1);
        }
        
        go_by_transitions(target, BOTH);
        
        
    }
}
*/

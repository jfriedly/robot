#use "util.ic"

#define OPTO_PORT 7
#define MOT_LEFT 0
#define MOT_RIGHT 1

void go_by_transitions(int target, int motors) {
    int n, last;
    
    printf("Driving\n");
    
	/// Get an initial value for last
    last = digital(OPTO_PORT);

	/// If-else tree to decide which motor to use.  Did not use switch-case because Handy Board doesn't like that much.
	if(motors==MOT_LEFT)
    	motor(MOT_LEFT,100);
	else if(motors==MOT_RIGHT)
    	motor(MOT_RIGHT,100);
	else if(motors==2)
	{
    	motor(MOT_RIGHT,100);
    	motor(MOT_LEFT,100);
	}
    
	/// The while loop takes continuous digital readings until it sees a change, then the for loop reverses what the while loop looks for.  The for loop only runs as many times as needed though.
	for(n=0;n<target;++n) {
        while(digital(OPTO_PORT) == last)
          ;
        last = !last;
    }
    
	/// Turn everything off.
    ao();
    printf("Done\n");
}

void dist_test(void)
{
    int n = 0;
    int last;
    
    press_start();
    
    last = digital(OPTO_PORT);
    motor(MOT_LEFT, 100);
    motor(MOT_RIGHT, 100);
    while(!stop_button())
      {
        if(last != digital(OPTO_PORT))
          {
            ++n;
            last = !last;
          }
    }
    
    ao();
    
    printf("Transitions %d\n", n);
        
}


int main()
{    
    int target;
    
    for(;;) {
        while(!start_button()) {
            target = 76 + (knob() - 128) / 8;
            printf("Target: %d\n", target);
            sleep(0.1);
        }
        
        go_by_transitions(target, 2);
        
        
    }
}

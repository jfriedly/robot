# Define macros to be used later. These will be stored in an array (hence the commas) and each macro will be called subsequently by an interpreter function.  The interpreter works by just executing each subsequent function call.
def ACTION_HALT 0
def ACTION_WAIT_FOR_START_LIGHT      1
def ACTION_WAIT_FOR_START_BUTTON     2
def ACTION_FROWARD_BY_KNOB           3
def ACTION_CALIBRATE_GPS             4

# Define macros that take an argument.
def ACTION_1ARG 100
def ACTION_FORWARD_TO_GPS_Y(lim)     100, lim
def ACTION_TURN_TO_ANGLE(ang)        101, ang
def ACTION_FORWARD_BY_INCHES(t) 102, t

# Define macros that take two arguments.
def ACTION_2ARG 200
def ACTION_DRIVE_TO_GPS(x,y)         200, x, y
def ACTION_TURN_BY_DEGREES(t,d)  201, t, d

# Global array that holds all the different actions.
# Note:  Our robot functions on a 360 compass with East being 0 degrees, not on a 180 degree compass like the course provides. See function update_heading().
int ACTIONS[] = {
    ACTION_CALIBRATE_GPS,
    ACTION_WAIT_FOR_START_LIGHT,
	ACTION_TURN_TO_ANGLE(135),  
	ACTION_FORWARD_BY_INCHES(29),
	ACTION_ALIGN_WITH_METAL_STRIP(90),
	ACTION_FOLLOW_METAL_STRIP(8),
	ACTION_DETECT_LIGHT_COLOR,
	ACTION_IF_BLUE_SKIP(11),
	ACTION_FORWARD_BY_INCHES(-8),
	ACTION_TURN_TO_ANGLE(0),
	ACTION_ALIGN_WITH_METAL_STRIP(90),
	ACTION_FOLLOW_METAL_STRIP(8),
	ACTION_DETECT_LIGHT_COLOR,
	ACTION_IF_BLUE_SKIP(5),
	ACTION_FORWARD_BY_INCHES(-8),
	ACTION_TURN_TO_ANGLE(0),
	ACTION_ALIGN_WITH_METAL_STRIP(90),
	ACTION_FOLLOW_METAL_STRIP(8),
	ACTION_DETECT_LIGHT_COLOR,
	ACTION_PICK_UP_CORN,
	ACTION_TURN_TO_ANGLE(315),
	ACTION_FORWARD_BY_INCHES(29),
	ACTION_TURN_TO_ANGLE(90),
	ACTION_FORWARD_BY_INCHES(36),
	ACTION_TURN_TO_ANGLE(120),
	ACTION_FORWARD_BY_INCHES(18),
	ACTION_ALIGN_WITH_METAL_STRIP(135),
	ACTION_FOLLOW_METAL_STRIP(8),
	ACTION_DROP_HAY_BALE,
	ACTION_FORWARD_BY_INCHES(1),
	ACTION_IF_CORN_BIN_LEFT_SKIP(5),
	ACTION_TURN_TO_ANGLE(340),	
	ACTION_FORWARD_BY_INCHES(22),
	ACTION_ALIGN_WITH_METAL_STRIP(0),
	ACTION_FOLLOW_METAL_STRIP(8),
	ACTION_DROP_CORN,
	ACTION_IF_CORN_BIN_RIGHT_SKIP(5),
	ACTION_TURN_TO_ANGLE(225),	
	ACTION_FORWARD_BY_INCHES(9),
	ACTION_ALIGN_WITH_METAL_STRIP(180),
	ACTION_FOLLOW_METAL_STRIP(8),
	ACTION_DROP_CORN,
	

    ACTION_HALT

  };



/** 
 * @file   function_main.ic
 * @brief  Main loop
 * @author Andrew Krieger
 * @date   4/26/2011
 *
 */


#use "defines.ic"
#use "drive.ic"
#use "servo/exp_servo_lib.ic"
#use "servo/exp_servo_calibrate.ic"
#use "CdS.ic"
#use "line.ic"
#use "drive-straight.ic"

#define RED_BUTTON_TRIES 2

void step_treads2(int left, int right, long timeout) {
    int left_dir = 100, right_dir = 100;
    
    if(left < 0)
      left_dir = -100;
    if(right < 0)
      right_dir = -100;
    
    left = abs(left);
    right = abs(right);
    
    SHAFT_LEFT_COUNT = SHAFT_RIGHT_COUNT = 0;
    reset_system_time();
    
    while((SHAFT_LEFT_COUNT < left || SHAFT_RIGHT_COUNT < right) && mseconds() < timeout) {
        if(SHAFT_LEFT_COUNT < left && SHAFT_LEFT_COUNT - SHAFT_RIGHT_COUNT < 2)
          motor(MOTOR_LEFT, left_dir);
        else
          motor(MOTOR_LEFT, 0);
        
        if(SHAFT_RIGHT_COUNT < right && SHAFT_RIGHT_COUNT - SHAFT_LEFT_COUNT < 2)
          motor(MOTOR_RIGHT, right_dir);
        else
          motor(MOTOR_RIGHT, 0);
    }
    
    ao();
    //be nice to the motors
    sleep(0.1);
}


/**
 * @brief main entry point
 */
void main() {
    int i, j;
    
    gps_initialize_knob();
    gps_enable();
    
    exp_servo_min[SERVO_CORN] = exp_servo_min[SERVO_HAY] = 400;
    exp_servo_max[SERVO_CORN] = exp_servo_max[SERVO_HAY] = 4000;
    
    exp_servo_enable();
    exp_servo_deg(SERVO_CORN, 0);
    exp_servo_deg(SERVO_HAY, 0);
    
    init_shaft_encoders();
    
    sleep(1.0);
    while(start_button())
      ;
    
    for(;;) {
        printf(" Press START to   start WINNING\n");
        wait_for_start();
        
        drive_up_hill();
        
        turn(-70.0);
        
        gps_turn(85, 5);
        
        drive_back_to_shiny(1, 2000L);
        
        gps_turn(80, 5);
        
        drive_back_to_shiny(0, 1500L);
        
        follow_strip_back(1);
        
        drive_straight(-3);
        
        exp_servo_deg(SERVO_HAY, 45);
        msleep(250L);
        exp_servo_deg(SERVO_HAY, 90);
        msleep(250L);
        exp_servo_deg(SERVO_HAY, 0);
        msleep(250L);
        
        gps_good_data();
        for(i=0;!gps_button && i < RED_BUTTON_TRIES;++i) {
            motor(MOTOR_LEFT, -100);
            motor(MOTOR_RIGHT, -100);
            msleep(500L);
            
            motor(MOTOR_LEFT, 100);
            motor(MOTOR_RIGHT, 100);
            msleep(200L);
            gps_good_data();
        }
        
        drive_straight(15);
        turn(62.5);
        
        gps_turn(100, 5);
        
        drive_forward_to_shiny(2000L);
        
        drive_back_to_shiny(1, 500L);
        
        drive_straight(-7);
        turn(-90.0);
        
        dance_to_strip();
        
        printf("START\n");
        press_start();
        
        follow_strip_back(1);
        
        motor(MOTOR_LEFT, -80);
        motor(MOTOR_RIGHT, -80);
        msleep(125L);
        ao();
        
        turn_slow(10.0);
        turn_slow(-20.0);
        turn_slow(10.0);
        
        motor(MOTOR_LEFT, 70);
        motor(MOTOR_RIGHT, 70);
        msleep(100L);
        
        drive_straight(5);
        turn_slow(30.0);
        drive_straight(10);
        turn_slow(30.0);
        drive_straight(40);
        
        turn_slow(-20.0);
        drive_straight(10);
        turn_slow(-20.0);
        
        drive_down_hill();       
    }
}
